apply from: "${rootProject.projectDir}/scripts/flavors.gradle"
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.squareup.sqldelight'

android {
    with flavorConfig

    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools

    composeOptions {
        kotlinCompilerExtensionVersion(libs.versions.compose.get())
    }

    defaultConfig {
        applicationId "com.m3sv.plainupnp"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
    }

    def isDeploy = System.getenv('IS_DEPLOY')

    if (isDeploy)
        signingConfigs {
            release {
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
                storeFile file(System.getenv('STORE_FILE'))
                storePassword System.getenv('STORE_PASSWORD')
            }
        }

    buildTypes {
        release {
            minifyEnabled true
            if (isDeploy)
                signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':core:persistence')
    implementation project(':core:eventbus')
    implementation project(':core:resources')
    implementation project(':feature:home')
    implementation project(':feature:onboarding')
    implementation project(':feature:selectcontentdirectory')
    implementation project(':feature:settings')
    implementation project(':feature:inappplayer')
    implementation project(':shared:upnp')

    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.cardview)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.ktx.preference)
    implementation(libs.androidx.lifecycle.extensions)
    implementation(libs.androidx.lifecycle.ktx.livedata)
    implementation(libs.androidx.lifecycle.ktx.runtime)
    implementation(libs.androidx.lifecycle.ktx.viewmodel)
    implementation(libs.androidx.recyclerview)
    implementation(libs.bundles.cling)
    implementation(libs.bundles.compose)
    implementation(libs.bundles.coroutines)
    implementation(libs.bundles.nanohttpd)
    implementation(libs.glide)
    implementation(libs.hilt.android.core)
    implementation(libs.material)
    implementation(libs.sqldelight)
    implementation(libs.timber)

    kapt(libs.hilt.compiler)

    testImplementation libs.androidx.core.testing
    testImplementation(libs.test.junit)
    testImplementation(libs.test.mockito.core)
}
